<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: backup | My Geekdom]]></title>
  <link href="http://www.neilsmithline.com/blog/categories/backup/atom.xml" rel="self"/>
  <link href="http://www.neilsmithline.com/"/>
  <updated>2012-09-23T18:28:28-04:00</updated>
  <id>http://www.neilsmithline.com/</id>
  <author>
    <name><![CDATA[Neil Smithline]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Disk Crash, Part 3: OS Indepent Configuration]]></title>
    <link href="http://www.neilsmithline.com/blog/2012/09/03/disk-crash-part3/"/>
    <updated>2012-09-03T22:02:00-04:00</updated>
    <id>http://www.neilsmithline.com/blog/2012/09/03/disk-crash-part3</id>
    <content type="html"><![CDATA[<p>
<i>NOTE: This was written on September 3<sup>rd</sup> and published on September 23<sup>rd</sup>.</i>
</p>


<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">Managing Configuration</h2>
<div class="outline-text-2" id="text-1">


<p>
My previous postings about my <a href="http://www.neilsmithline.com/blog/2012/08/21/disk-crash/">disk crash</a> and my <a href="http://www.neilsmithline.com/blog/2012/08/21/disk-crash-part2/">backup strategy</a> discuss how I keep files in sync across my computers. While I have a 3-tiered system using CrashPlan, DropBox, and rdist to meet different synchronization requirements for different files, this strategy uses tried-and-true technology.
</p>
<p>
But identical files across machines doesn't guarantee identical behavior across the machines. At the moment, my computer collection is:
</p><ul>
<li>A laptop running Ubuntu 12.04
</li>
<li>A laptop double-booted to run Ubuntu 12.04 and Windows 7. I'm not a big Windows fan but sometimes I need to use it.
</li>
<li>My media/game server running Windows 7 (good for games for my kids), and Ubuntu 12.04 (best for me).
</li>
<li>My MacBook Pro running OS X 10.6.
</li>
<li>My VPS cloud server. It has been running Ubuntu 10.04 but I've requested an upgrade to the newest version of Debian, I think Lenny. I need the upgrade because Ubuntu 10.04 is 2+ years old. I'm switching to Debian because Debian tends to be more stable though it has a weaker <a href="http://en.wikipedia.org/wiki/Desktop_environment">desktop environment</a> than Ubuntu. Being that my VPS is a <a href="http://en.wikipedia.org/wiki/Headless_system">headless server</a>, the desktop features don't really matter to me.
</li>
</ul>


<!-- more -->

</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2">Home Directories</h2>
<div class="outline-text-2" id="text-2">


<p>
Being that I run three different OSs (Ubuntu is built on Debian so I don't consider it a separate OS), I have different home directories.
</p><ul>
<li>Ubuntu/Debian: my home directory is <code>/home/neil</code>.
</li>
<li>Mac OS X: My home directory is <code>/Users/neil</code>.
</li>
<li>Windows 7: Synchronizing configuration between <a href="http://en.wikipedia.org/wiki/Unix-like">*nix</a> systems and Windows only makes sense if you are running <a href="http://cygwin.com">Cygwin</a>. Unfortunately, Cygwin home directories seem a bit random (info about <a href="http://cygwin.com/faq/faq-nochunks.html#faq.setup.home">Cygwin home directories</a>).
</li>
</ul>


<p>
While using the <code>$HOME</code> variable to refer to your home directory works in many situations, it doesn't always help. My solution to this is simple: *nix wins. My home directory is <code>/home/neil</code> on all of my computers. If it is not there by default, I use atypical <a href="http://en.wikipedia.org/wiki/Mount_(computing)">file mounts</a> or, when needed, <a href="http://en.wikipedia.org/wiki/Symbolic_link">symbolic links</a> to achieve conformance.
</p>
</div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3">My $PATH</h2>
<div class="outline-text-2" id="text-3">


<p>
Maintaining your <a href="http://en.wikipedia.org/wiki/$PATH">$PATH</a> settings is a real hassle. Not only are executables in different locations based on your OS, I frequently find that executables are in different locations on the same OS.
</p>
<p>
<a href="http://en.wikipedia.org/wiki/Ruby_(programming_language)">Ruby</a> is a good example of a program that tends to be in different locations on different computers. I use <a href="http://mxcl.github.com/homebrew/">Homebrew</a> to install Ruby on my Mac OS X computer, <a href="http://en.wikipedia.org/wiki/Apt-get">APT</a> to install Ruby on one of my Ubuntu laptops, and <a href="https://github.com/sstephenson/rbenv">rbenv</a> on my other Ubuntu laptop. I don't bother installying Ruby on my Windows computer as I only use Windows when I have to.
</p>

</div>

<div id="outline-container-3-1" class="outline-3">
<h3 id="sec-3-1">Dynamically Assigned $PATH Variables</h3>
<div class="outline-text-3" id="text-3-1">


<p>
As I use a single <code>.bashrc</code> file across all my computers and exectuables are scattered everywhere, I dynamically configure my <code>$PATH</code> variable based on the computer's file system. I use my a <code>bash</code> function, <code>addpath</code>, to add directories to <code>$PATH</code>:
</p>



<pre class="src src--n">addpath() {
    if [ -d <span style="color: #004400; background-color: #CCCCCC;">"$@"</span> ]; then
        PATH=<span style="color: #004400; background-color: #CCCCCC;">"$@:$PATH"</span>
    fi
}
</pre>


<p>
With <code>addpath</code>, I don't have to worry about adding too many directories to my <code>$PATH</code>. This allows code such as:
</p>



<pre class="src src-sh"><span class="linenr">1:  </span>addpath /usr/bin        <span style="color: #550055; background-color: #CCCCCC;"># </span><span style="color: #550055; background-color: #CCCCCC;">typical *nix path component</span>
<span class="linenr">2:  </span>addpath /sw/bin         <span style="color: #550055; background-color: #CCCCCC;"># </span><span style="color: #550055; background-color: #CCCCCC;">used by some Mac OS X package managers</span>
<span class="linenr">3:  </span>addpath /c/usr/bin      <span style="color: #550055; background-color: #CCCCCC;"># </span><span style="color: #550055; background-color: #CCCCCC;">used by Cygwin on Windows</span>
</pre>


<p>
<code>addpath</code> ensures that only existing directories are added to <code>$PATH</code>.
</p>
<p>
This meets <i>nearly</i> all of my needs. The one problem I have with this solution is that I find that my <code>$PATH</code> frequently changes. For example, when I recently started using <code>rbenv</code>, a path change was required. These changes aren't major but sometimes I need a few tries to get it right.
</p>
<p>
So I have a strategy for repeatedly updating my <code>.bashrc</code> file, executing the <code>.bashrc</code> file, and testing my new <code>$PATH</code>. The first part of this strategy is that, the first time <code>bash</code> is run, I squirrel away the value of <code>$PATH</code> into another variable:
</p>


<pre class="src src-SH"><span class="linenr">1:  </span>export ORIG_PATH=<span style="color: #004400; background-color: #CCCCCC;">"${ORIG_PATH:-$PATH}"</span>
<span class="linenr">2:  </span>export PATH=<span style="color: #004400; background-color: #CCCCCC;">"$ORIG_PATH"</span>
</pre>


<p>
For those of you that aren't fluent in shell syntax, <code>ORIG_PATH=${ORIG_PATH:-$PATH}</code> will set the value of <code>$ORIG_PATH</code> to <code>$PATH</code> the first time it is executed. On subsequent executions, <code>$ORIG_PATH</code> will be assigned the value of <code>$ORIG_PATH</code>. This ensures that <code>$ORIG_PATH</code> always equals the value of <code>$PATH</code> the first time the <code>.bashrc</code> file is executed.
</p>
<p>
I then use <code>$ORIG_PATH</code> as the basis for all of my <code>$PATH</code> changes.
</p>
<p>
The final piece of my <code>$PATH</code> management is this function:
</p>


<pre class="src src-SH"><span class="linenr">1:  </span>reinit () {
<span class="linenr">2:  </span>    . $HOME/.bashrc
<span class="linenr">3:  </span>}
</pre>


<p>
It is just a convenience function to execute my <code>.bashrc</code> file in the current shell. Being that my <code>.bashrc</code> file is <a href="http://en.wikipedia.org/wiki/Idempotent">idempotent</a>, I can rerun it as often as I need, confident that my <code>bash</code> environment will be the same no matter how many times I've executed my <code>.bashrc</code>.
</p>
</div>

</div>

<div id="outline-container-3-2" class="outline-3">
<h3 id="sec-3-2">Miscellaneous Path Differences</h3>
<div class="outline-text-3" id="text-3-2">



</div>

<div id="outline-container-3-2-1" class="outline-4">
<h4 id="sec-3-2-1">Managing <code>rbenv</code></h4>
<div class="outline-text-4" id="text-3-2-1">

<p>While the above solution handles general <code>$PATH</code> configuration, some special cases still arise. Managing my <code>$PATH</code> to work best with Ruby tends to change across my computers and even change over time on the same computer.
</p>
<p>
For Ruby, some of my machines have <code>rbenv</code> installed on them and some don't. On one machine I find that sometimes I use <code>rbenv</code> and at other times I don't wish to use it. So I have a one-off solution for managing my <code>rbenv</code> environment in my <code>.bashrc</code> file:
</p>



<pre class="src src--n">if [ -f <span style="color: #004400; background-color: #CCCCCC;">"$HOME/.rbenv/USE-RBENV"</span> ]; then
    addpath $HOME/.rbenv/shims
    ... other stuff ...
fi
</pre>


<p>
The file <code>USE-RBENV</code> is an empty file that I create when I want to, not surprisingly, use <code>rbenv</code>. To switch between using and not using <code>rbenv</code> I create or delete the <code>USE-RBENV</code> file and re-execute my <code>.bashrc</code> file using my <code>bash</code>  <code>reinit</code> function. This strategy leverages the dynamic path settings and idempotency of my <code>.bashrc</code> file.
</p>
</div>

</div>

<div id="outline-container-3-2-2" class="outline-4">
<h4 id="sec-3-2-2">Managing My <code>.emacs</code></h4>
<div class="outline-text-4" id="text-3-2-2">


<p>
Avoiding most of the details, <a href="http://en.wikipedia.org/wiki/Emacs">Emacs</a> needs to find some <a href="http://en.wikipedia.org/wiki/Elisp">elisp</a> files as well as some *nix files that are not in the same place on all of my computers. For loading elisp files, I have written a function that is similar to my <code>addpath</code> function that I use in my <code>.bashrc</code> file.
</p>
<p>
The elisp function, <code>add-load-path</code>, has a bit more smarts than <code>addpath</code>. <code>addpath</code> works by omitting non-relevant directories to <code>$PATH</code>. <code>add-load-path</code> knows how to search through directories that may contain an elisp package and then include that directory. A call to <code>add-load-path</code> is simply:
</p><pre class="example">
(add-load-path "jdee/lisp")
</pre>


<p>
There are also some functions of Emacs that behavior better if they know the full path of some executables. For example, Emacs can make use of the *nix <a href="http://en.wikipedia.org/wiki/Man_page">man(1)</a> command. While <code>add-load-path</code> finds elisp files, <code>find-first-executable</code> searches for executable files. This is the elisp command I use to find the <code>man</code> executable:
</p>


<pre class="src src--n">(setq manual-program
        (find-first-executable
         '(<span style="color: #004400; background-color: #CCCCCC;">"/usr/local/bin/man"</span> <span style="color: #004400; background-color: #CCCCCC;">"/usr/bin/man"</span>
           <span style="color: #004400; background-color: #CCCCCC;">"/bin/man"</span> <span style="color: #004400; background-color: #CCCCCC;">"c:/cygwin/bin/man.exe"</span>)))
</pre>


<p>
<code>find-first-executable</code> returns the first path that corresponds to an executable. You may have noticed the <code>c:/cygwin/bin/man.exe</code> argument which allows the same <code>.emacs</code> file to run on Windows as well as *nix.
</p>
</div>
</div>
</div>

</div>




<div id="outline-container-4" class="outline-2">
<h2 id="sec-4">In The Next Installment</h2>
<div class="outline-text-2" id="text-4">


<p>
The next and final part of this series will delve a bit deeper into my general philosophy of portable and maintainable configuration and code. In general, I try to plan for the unplannable. I try not to let the fact that planning for the unplannable is impossible get in my way.
</p>
<p>
I try to produce flexible designs that typically include a separation of data and code. Then, when the unexpected occurs, in theory, I can return to work with only a minimal hit to my productivity. In some sense, I use the <a href="http://en.wikipedia.org/wiki/Model-view-controller">MVC</a> programming model in my data management and system configuration.
</p></div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disk Crash, Part 2: My Backup Strategy]]></title>
    <link href="http://www.neilsmithline.com/blog/2012/08/21/disk-crash-part2/"/>
    <updated>2012-08-21T22:02:00-04:00</updated>
    <id>http://www.neilsmithline.com/blog/2012/08/21/disk-crash-part2</id>
    <content type="html"><![CDATA[<p>
/NOTE: This was written on August 21<sup>st</sup> and published on September 23<sup>rd</sup>
</p>


<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">My File Distribution And Backup Strategy</h2>
<div class="outline-text-2" id="text-1">

<p>In my <a href="http://www.neilsmithline.com/blog/2012/08/21/disk-crash/">previous posting</a> I discussed my how I categorize files in terms of importance, timeliness when distributing files, and the platforms I distribute the files to. Here I'll cover the technologies I use to meet my file management goals.
</p>
</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2">My Backup Strategy</h2>
<div class="outline-text-2" id="text-2">

<p>Making sure your computer is backed up is typically a hassle. Even worse, my experience has taught me that thinking that you are backing up your system is very different from actually backing up your system. Numerous times I've been told by a system admin that, unbeknownst to them, the backups are unusable.
</p>
<p>
Knowing how difficult backing up your computer can be, I outsource it to a company whose only business is backing up data.
</p>

</div>

<div id="outline-container-2-1" class="outline-3">
<h3 id="sec-2-1">CrashPlan</h3>
<div class="outline-text-3" id="text-2-1">




<!-- more -->
<p>
I started using <a href="http://www.crashplan.com">CrashPlan</a> because they have a <a href="http://www.crashplan.com/consumer/compare.html">$25/year backup plan</a>. That is, they are cheap. As their service was simple, reliable, and pretty much configure-and-forget-about-it, I upgraded to their <a href="http://www.crashplan.com/consumer/crashplan-plus.html">premium plan</a>. It costs $120/year. For that $10/month I get unlimited data storage and can backup as many as 10 computers.
</p>
<p>
While my household has more than 10 computers, many of them aren't used very often and don't need to be backed up so the limit of 10 computers has never been a problem.
</p>
<p>
I consider the $10/month a great deal as CrashPlan has been a life saver for me  more than once. CrashPlan has an application that runs in the background, similar to DropBox's application, and continually backs up your computer. The initial backup can take a few days but once backed up, the Crashplan database is never more than a few minutes behind changes on your disk drive.
</p>
<p>
I should mention that the initial backup takes a few days because CrashPlan tries to share the computer with other applications. I can restore all my backed up data from CrashPlan in about an hour.
</p>
</div>

</div>

<div id="outline-container-2-2" class="outline-3">
<h3 id="sec-2-2">Not Just Backup, Secure Backup</h3>
<div class="outline-text-3" id="text-2-2">

<p>When configured properly, CrashPlan uses the <a href="http://en.wikipedia.org/wiki/Blowfish_(cipher)">Blowfish</a> encryption algorithm with a <a href="http://support.crashplan.com/doku.php/faq/security#what_type_of_encryption_does_crashplancrashplan_use">448-bit key</a>. My encryption key was generated on my computer and has never left it. This means that even if CrashPlan's servers are compromised and all of my backup data is stolen, it is very unlikely that the attacker could decrypt my data.
</p></div>

</div>

<div id="outline-container-2-3" class="outline-3">
<h3 id="sec-2-3">Backup Everything</h3>
<div class="outline-text-3" id="text-2-3">

<p>I use CrashPlan to backup everything that I want to backup. I don't distinguish between more or less important files. I just backup everything I think I may miss if it were to go away. CrashPlan is even kind enough to keep multiple revisions of each file and deleted files available for restoration. What a deal.
</p>
<p>
On my Mac OS X, I back up nearly everything in my home directory. While I try to keep my application preferences out of <code>~/Library/...</code>, some applications just won't cooperate. So I also selectively backup directories in <code>~/Library/...</code> I also don't bother backing up <code>~/Downloads</code>. I don't currently back up <code>~/.cpan</code>, the data directory for the Perl package installer. As mentioned in my previous posting, I don't yet have a working strategy for what applications have been installed by package managers such as CPAN.
</p>
</div>
</div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3">My File Distribution Strategy</h2>
<div class="outline-text-2" id="text-3">

<p>My file distribution strategy is more complex than my backup strategy. To date I've not found any service that meets all of my needs for data distribution. This leaves me using multiple distribution technologies based on the importance and timeliness of the data.
</p>

</div>

<div id="outline-container-3-1" class="outline-3">
<h3 id="sec-3-1">Dropbox</h3>
<div class="outline-text-3" id="text-3-1">

<p><a href="http://dropbox.com">Dropbox</a> and similar services have become quite popular the last few years. I use Dropbox far data distribution continually. In fact, this blog entry is being authored inside my Dropbox directory. Dropbox is the primary data distribution technology that I use for managing the distribution of High Importance, Timely Distribution files. Especially my <a href="http://www.orgmode.org">Org Mode</a> PIM files.
</p>
<p>
Because of Dropbox's nearly instantaneous file distribution, I can be working on one laptop, save my Org Mode files, pick up my other laptop to find the updated Org Mode files waiting for me. Wonderful!
</p>

</div>

<div id="outline-container-3-1-1" class="outline-4">
<h4 id="sec-3-1-1">Dropbox Security Concerns</h4>
<div class="outline-text-4" id="text-3-1-1">

<p>While Dropbox is awfully convenient, I'm not terribly comfortable with its security. <a href="https://www.dropbox.com/help/27/en">Dropbox's security claims</a> state that they use <a href="http://en.wikipedia.org/wiki/Transport_Layer_Security">TLS</a>, which is frequently referred to as "SSL", for network security. But the rest of their claims are intangible. For example, what is a "hardened" website and how is it better than other websites? They flat out state:
</p><blockquote>

<p>Like most online services, we have a small number of employees who must be able to access user data for the reasons stated in our privacy policy (e.g., when legally required to do so).
</p>
</blockquote>


<p>
Without disputing Dropbox's claim that most online services have a means to allow their employees to access your private data, I use CrashPlan for my backups and know that they can't access my private data.
</p>
<p>
Even if Dropbox's employees are 100% trustworthy, if their employees can access your data, so too can a hacker.
</p>
<p>
Because of my security concerns, I avoid using Dropbox for my more sensitive data. For example, I have an Org Mode todo list related to financial matters such as taxes and bill paying. The files that have the details about those tasks are not in my Dropbox directory.
</p>
<p>
If you are interested, here's a <a href="http://lifehacker.com/5794486/how-to-add-a-second-layer-of-encryption-to-dropbox">nice article</a> covering some of Dropbox's security problems as well as strategies to make them less of a problem.
</p></div>
</div>

</div>

<div id="outline-container-3-2" class="outline-3">
<h3 id="sec-3-2">rdist + ssh</h3>
<div class="outline-text-3" id="text-3-2">

<p><a href="http://linux.about.com/library/cmd/blcmdl1_rdist.htm">rdist</a> and <a href="http://linux.about.com/od/commands/l/blcmdl1_ssh.htm">ssh</a> are two tried and true Unix programs. rdist is used to keep two directories synchronized. The directories can be on one computer but are typically on two different computers (<i>rdist</i> = Remote Distribution).
</p>
<p>
rdist and Dropbox are similar in that they both keep directories across multiple machines synchronized. However, unlike Dropbox, rdist must be manually run. It doesn't watch specific directories watching for a file modification and then automatically synchronize the files across all of your computers.
</p>
<p>
I use rdist to sync files to my <a href="http://ubuntu.com">Ubuntu</a> <a href="http://en.wikipedia.org/wiki/Virtual_private_server">VPS</a> server that I rent, quite happily, from <a href="http://rosehosting.com">RoseHosting</a>. The reason for synching to my VPS is that it is my only computer that is always accessible from the internet:
</p><ul>
<li>Rosehosting keeps my server running.
</li>
<li>It has a <a href="http://en.wikipedia.org/wiki/Domain_Name_System">DNS</a> entry so it can be found from any computer.
</li>
<li>Unlike my personal computers, especially my laptops, my VPS is never turned off or not online.
</li>
<li>Unlike computers on my home network, the firewall my VPS is behind allows incoming connections. My home network firewall is significantly more restrictive.
</li>
</ul>


<p>
In short, my VPS is the only computer I have that is available 24x7 from any internet connection. This means that every computer can sync with it at any time. While it would be faster and use less network bandwidth if I synched the computers in my home to each other rather than a VPS somewhere out in the cloud, I have more than enough bandwidth to use.
</p>
</div>
</div>

</div>




<div id="outline-container-4" class="outline-2">
<h2 id="sec-4">Next Up</h2>
<div class="outline-text-2" id="text-4">


<p>
Keeping files in sync is great but identical files don't always behave identically on different systems. For example, there tends to be lots of file paths in my <code>.bashrc</code> and my <code>.emacs</code> files. I utilize a series of tricks to allow many of these files to behave identically on different machines.
</p></div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disk Crash]]></title>
    <link href="http://www.neilsmithline.com/blog/2012/08/21/disk-crash/"/>
    <updated>2012-08-21T22:02:00-04:00</updated>
    <id>http://www.neilsmithline.com/blog/2012/08/21/disk-crash</id>
    <content type="html"><![CDATA[<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">Ouch! My Disk Crashed</h2>
<div class="outline-text-2" id="text-1">

<p>My <a href="http://en.wikipedia.org/wiki/MacBook_Pro">MacBook Pro</a> became unusable and required a complete repartition and several reformats before I could resuscitate it. Recovering from the disk crash was surprisingly easy, there were a few hitches. Being that, without a duplicate computer, the only time that you can see how well your backup strategy works and correct it, I've been using this disk crash as an opportunity to bolster my backup strategy.
</p>
<p>
While I had some gaps in my backup strategy, within 2 hours of my disk crash I had my backup computer running, complete with my data files, shell scripts, config files, etc&hellip;
</p>
</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2">File Distribution</h2>
<div class="outline-text-2" id="text-2">

<p>In my mind, file backup and file distribution across multiple machines are intimately related. File backup is, well it's file backup. I use file distribution to keep various files synchronized across my devices. It should be noted that while the goal of file distribution is synchronization of data across computers, distributing files to other computers effectively backs them up.
</p>
<p>
My primary computers are my MacBook Pro and an <a href="http://en.wikipedia.org/wiki/Hewlett-Packard">HP</a> laptop running <a href="http://en.wikipedia.org/wiki/Ubuntu_(operating_system)">Ubuntu Linux</a>. My mobile is a <a href="http://en.wikipedia.org/wiki/Samsung_Infuse_4G">Samsung Infuse</a> running <a href="http://en.wikipedia.org/wiki/CyanogenMod#CyanogenMod_10">CyanogenMod 10</a>, a customized version of <a href="http://en.wikipedia.org/wiki/Android_version_history#Android_4.1.x_Jelly_Bean">Android 4.1 Jelly Bean</a>. I also rent a <a href="http://en.wikipedia.org/wiki/Virtual_private_server">VPS</a> <a href="http://en.wikipedia.org/wiki/Cloud_computing">cloud computer</a> running Ubuntu. Lastly, I have an <a href="http://en.wikipedia.org/wiki/Asus">Asus</a> running <a href="http://en.wikipedia.org/wiki/Windows_7">Windows 7</a>. I primarily use te Windows computer for <a href="http://en.wikipedia.org/wiki/Streaming_media">streaming media</a> (I don't dig Windows).
</p>
<p>
I use file distribution to achieve two goals. I like to keep my configuration files consistent across my MacBook and two Ubuntu computers. This includes my <a href="http://en.wikipedia.org/wiki/Bash_(Unix_shell)#Startup_scripts">.bashrc</a> and my <a href="http://en.wikipedia.org/wiki/Emacs_Lisp#Source_code">.emacs</a> site startup files. While I want those files to stay in sync to make the management of them simpler, there's generally no rush in synchronizing them.
</p>
<p>
Another example of my file distribution involves my <a href="http://en.wikipedia.org/wiki/Personal_information_manager">PIM</a>. I use <a href="http://orgmode.org">Org Mode</a> as my <a href="http://en.wikipedia.org/wiki/Personal_information_manager">PIM</a> and want the data files to be synchronized across my MacBook, two Linux boxes, and my Android. I want those files synchronized immediately as I frequently move from computer to computer and always want my PIM data to be up to date.
</p>
</div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3">Prioritization Of File Backup And File Distribution</h2>
<div class="outline-text-2" id="text-3">

<p>My backup and distribution strategy categorizes files using two metrics:
</p><ul>
<li><b>File Importance:</b> This describes how critical each file is. Files in <code>~/Downloads</code> are typically not very important while the text for this blog entry is very important (at least to me).
</li>
<li><b>Synchronization Delay:</b> As I move between multiple computers, my productivity is related to how frequently some files are synchronized across the computers. Some I want optimized as soon as possible while other files can take hours or even days to get synchronized without affecting my productivity. Some low priority files, such as those in <code>~/Downloads</code> don't ever need to be synchronized across machines.
</li>
</ul>




<!-- more -->

<p>
In practice this leads to four types of files:
</p><ul>
<li><b>High/Timely:</b> Files that are very important and need to be synchronized in a timely fashion. My PIM files fall into this category.
</li>
<li><b>High/Delayed:</b> Important files that don't need to timely synchronization. Configuration files such as my .bashrc are High/Delayed.
</li>
<li><b>Low/Delayed:</b> Files that are convenient to have across my machines but aren't essential to my immediate productivity. For example, I frequently download manuals for various appliances that I own. I like to have them handy but it's fine if they aren't synched immediately. As I can easily download them again, they're of relatively low importance.
</li>
<li><b>Everything Else:</b> These are files that are of significantly low importance that I don't worry too much about them.
</li>
</ul>


<p>
My backup and distribution strategy varies by which quadrant (I'm excluding the N/A boxes) a file is in.
</p>
</div>

</div>




<div id="outline-container-4" class="outline-2">
<h2 id="sec-4">There's Data That Should Be Backed Up That Is Not In A File</h2>
<div class="outline-text-2" id="text-4">

<p>My first lesson was that not all data is backupable via file backup and distribution processes. The best example I have of this is the set of installed applications. Applications are typically large files and frequently require complex installations. While many <a href="http://en.wikipedia.org/wiki/Mac_os_x">Mac OS X</a> applications can be installed by copying the file into the <code>/Applications</code> directory, others require the use of package installers. This is similar to <a href="http://en.wikipedia.org/wiki/Windows">Windows</a> applications that store data in the <a href="http://en.wikipedia.org/wiki/Windows_registry">Windows Registry</a>.
</p>
<p>
Knowing that applications were cumbersome and frequently needed special installation scripts led me to decide to not back up my applications. After this disk crash, I continue to think that it makes no sense to backup your installed apps. That said, I have sorely missed having a list of the applications that I had installed before the disk problems.
</p>

</div>

<div id="outline-container-4-1" class="outline-3">
<h3 id="sec-4-1">Monitor Installed Applications</h3>
<div class="outline-text-3" id="text-4-1">

<p>My initial response to the lack of a list of installed apps was to start recording apps as I installed them. After the first half-dozen or so apps I decided that this was a bad idea. I could see that the list was going to be incomplete, outdated, and generally not very helpful.
</p>
<p>
So I took a few minutes to whip up a trivial shell script that I run once a day via crontab. The shell script attempts to record the names of installed applications rather than the actual applications themselves. The version of the shell script that I'm currently using is:
</p>


<pre class="src src-sh-mode">#!/bin/sh
shopt -s nullglob
shopt -u failglob
ls -dlrt /Applications/* /Library/PreferencePanes/* ~/Library/PreferencePanes/* &gt; ~/Dropbox/Backups/InstalledApps.txt
</pre>


<p>
An abbreviated sample of its output is:
</p>


<pre class="example">drwxr-xr-x   3 root  wheel  102 May  5  2009 /Applications/Font Book.app
drwxr-xr-x   3 root  wheel  102 May 19  2009 /Applications/Stickies.app
drwxr-xr-x   3 root  wheel  102 May 19  2009 /Applications/Chess.app
drwxr-xr-x   3 root  admin  102 Sep 19  2009 /Library/PreferencePanes/RCDefaultApp.prefPane
drwxrwxr-x   3 root  wheel  102 May 24  2011 /Library/PreferencePanes/Growl.prefPane
drwxr-xr-x@  3 neil  admin  102 May 24  2011 /Applications/HardwareGrowler.app
drwxr-xr-x@  3 neil  admin  102 May 24  2011 /Applications/GrowlTunes.app
drwxr-xr-x   3 neil  staff  102 Jul 25 18:27 /Applications/BetterTouchTool.app
drwxr-xr-x@  3 neil  admin  102 Aug 13 22:51 /Applications/Google Chrome.app
drwxr-xr-x@  4 neil  admin  136 Aug 18 08:19 /Applications/FirefoxAurora.app
drwxr-xr-x   3 neil  staff  102 Aug 18 11:52 /Applications/GrowlSafari.app
</pre>


<p>
As this script is run once a day and stored in my Dropbox folder, I always have an up-to-date copy of the file.
</p>
<p>
I still have some changes planned for the script:
</p><ul>
<li>The script only works for typical Mac OS X applications. It doesn't check for command line applications as well as applications installed by a package manager such os <a href="http://mxcl.github.com/homebrew/">Homebrew</a> (Mac OS X package installer), <a href="http://www.cpan.org/">CPAN</a> (Perl package installer), or <a href="https://github.com/sstephenson/rbenv/">rbenv</a> (Ruby package installer - sort of).
</li>
<li>Perhaps I had a good reason to put the data file into my Dropbox folder but I can't recall it now. This data seems a perfect example of High/Delayed data as discussed in the table above.
</li>
<li>The script misses some peculiar applications. Most of these applications are from Apple. <a href="https://developer.apple.com/xcode/">Xcode</a> is a good example of a "peculiar" application. Xcode includes a GUI application, command line programs, and runtime libraries. These get scattered across the machine. I suspect I'll just hardcode these applications into my script rather than trying to create the logic to find them. For example, I'll have my script add a line to the installed applications that reads <code>Xcode from https://developer.apple.com/xcode/</code>. That seems good enough.
</li>
</ul>


</div>

</div>

<div id="outline-container-4-2" class="outline-3">
<h3 id="sec-4-2">Other Missing Data</h3>
<div class="outline-text-3" id="text-4-2">

<p>Missing the list of installed apps had a quick fix but other data isn't so readily available or I don't know how to access it. Some examples of missing data are:
</p><ul>
<li>Customized icons for folders: On Mac OS X you can associate a small icon to each folder. On the directories that I use routinely I have customized the icons so that I can find them quickly.
</li>
<li>The settings of some Chrome extensions did not get restored.
</li>
<li>My cron jobs were only stored within cron's database.
</li>
</ul>


<p>
The cron jobs problem was another one that I was able to fix with a simple shell script and a minor modification to my workflow. Instead of editing my cron jobs directly via <code>crontab -e</code>, I now keep them in a file in my <code>bin</code> directory and modify that file as needed. When I modify my cron jobs I can either run crontab to immediately update my cron jobs or wait until I run my nightly cron job as that auto-updates my cron jobs:
</p>



<pre class="src src-sh-mode">#!/bin/sh

# Run my apps lister
$HOME/bin/installed-apps-lister.sh

# Run other stuff that I've removed from this example.

# Update my cron jobs in case I've modified the cron file.
crontab $HOME/bin/crontab-jobs
</pre>


<p>
The <code>$HOME/bin/crontab-jobs</code> file gets automatically backed up with the rest of my bin files.
</p>
</div>
</div>

</div>




<div id="outline-container-5" class="outline-2">
<h2 id="sec-5">Other Backup And Distribution Strategies</h2>
<div class="outline-text-2" id="text-5">

<p>I'll discuss the rest of my backup strategy in a subsequent posting. As a sneak-peek I'll tell you that the technologies I use include:
</p><ul>
<li><a href="http://en.wikipedia.org/wiki/Dropbox_(service)">Dropbox</a>
</li>
<li><a href="http://en.wikipedia.org/wiki/CrashPlan">CrashPlan</a>
</li>
<li><a href="http://linux.about.com/library/cmd/blcmdl1_rdist.htm">rdist</a>
</li>
<li><a href="http://en.wikipedia.org/wiki/GitHub">GitHub</a>
</li>
</ul>



</div>
</div>

]]></content>
  </entry>
  
</feed>
