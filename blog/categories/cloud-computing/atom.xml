<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cloud-computing | My Geekdom]]></title>
  <link href="http://www.neilsmithline.com/blog/categories/cloud-computing/atom.xml" rel="self"/>
  <link href="http://www.neilsmithline.com/"/>
  <updated>2012-07-24T20:26:11-04:00</updated>
  <id>http://www.neilsmithline.com/</id>
  <author>
    <name><![CDATA[Neil Smithline]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Blurring Static And Dynamic Blogs]]></title>
    <link href="http://www.neilsmithline.com/blog/2012/07/22/blurring-static-and-dynamic-blogs/"/>
    <updated>2012-07-22T18:23:00-04:00</updated>
    <id>http://www.neilsmithline.com/blog/2012/07/22/blurring-static-and-dynamic-blogs</id>
    <content type="html"><![CDATA[<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">Static Blogging</h2>
<div class="outline-text-2" id="text-1">

<p>I've discussed the pros and cons about static blogging <a href="http://www.neilsmithline.com/blog/categories/blogging-tech/">many times</a> before. In summary, the cons are that, well that your blog is static. No surprise there.
</p>
<p>
Fortunately, there are ways to push the limits of static blogging so that it is not quite so static.
</p>
</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2">Website Hosting</h2>
<div class="outline-text-2" id="text-2">

<p>Unless you are self-hosting your <a href="http://octopress.org">Octopress</a> or <a href="http://jekyllrb.com">Jekyll</a> blog, you are using another site to host your blog. I host mine on Github. They have a web server running 24x7 to host it. But that's not my problem. I just use their (free) services.
</p>
<p>
I understand that website hosting isn't a terribly exciting example of stretching the bubble of static blogging, but it is an example nonetheless. Dynamic blogs require specialized software running on their hosting computer to work. Static blogs tend to be able to run on generic web servers but there still must be a web server or there's no blog.
</p>
</div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3">JavaScript Helps</h2>
<div class="outline-text-2" id="text-3">

<p>Out of the box, Octopress comes with some features to show your most recent tweets as well as recent activity within your <a href="http://github.com">Github</a> repositories. This is dynamic data that Octopress implements with some JavaScript.
</p>
<p>
Just to be clear, by <i>dynamic data</i> I mean that the data displayed on the page may change without a republication of the blog. I am not necessarily referring to a scrolling widget or something. Just dynamic data. 
</p>
<p>
Conversely, JavaScript can be used to dynamically display static data. That is, data that is embedded in the source of the web page. Being that the data is embedded in the page's source at or before publication time, it is assuredly <i>static data</i>.
</p>
<p>
But client-side JavaScript (ie: JavaScript running in the user's browser) has its limits. For example, if you want to send a tweet whenever you add a new blog entry, client-side JavaScript is going to have a hard time at it.
</p>


<!-- more -->

</div>

</div>




<div id="outline-container-4" class="outline-2">
<h2 id="sec-4">Pushing Beyond Web Hosting JavaScript</h2>
<div class="outline-text-2" id="text-4">

<p>The trick behind adding a much wider array of dynamic features to your <i>static</i> blog is:
</p><blockquote>

<p>Integrate with external web services and let them do the work for you.
</p>
</blockquote>


<p>
It is even better if you can let other sites do the hard work for you free of charge. For example, Github is hosting this blog at no cost to me. Thank you Github! But Github won't tweet about my new blog postings or search through my website. Fortunately, there are services that will happily do that for you.
</p>

</div>

<div id="outline-container-4-1" class="outline-3">
<h3 id="sec-4-1">Site Search</h3>
<div class="outline-text-3" id="text-4-1">

<p>This blog's search functionality is provided by Google. Dynamic blogging systems such as <a href="http://joomla.org">Joomla</a> have a large array of <a href="http://extensions.joomla.org/extensions/search-a-indexing">search extensions</a> that you can run on your server to provide various searching features. I'm sure that they provide a much larger set of functionality than my site's Google search provides. 
</p>
<p>
Richer functionality or not, each extension needs to be installed, configured, and maintained. With Octopress, you never need to think about your site's search functionality. The site comes preconfigured for Google site search. That works for me.
</p>
</div>

</div>

<div id="outline-container-4-2" class="outline-3">
<h3 id="sec-4-2">Automated Tweeting</h3>
<div class="outline-text-3" id="text-4-2">

<p>There are many ways to tweet via an email message but there is no way, at least none that I've bothered to think through, to get Github to send emails formatted for a tweet whenever you post. But, there are many sites that will watch your blog for change and perform some activity when your blog changes.
</p>
<p>
Exactly which site you use depends on what your needs are. For automated tweeting I decided to use <a href="http://feedburner.com/">FeedBurner</a>. If you're unfamiliar with FeedBurner, it provides a web service that takes your site's RSS/Atom feed as input and adds value to that feed. My site's RSS feed is <a href="http://feeds.feedburner.com/MyGeekdom">http://feeds.feedburner.com/MyGeekdom</a>. Assuming you don't have uncommon browser settings, if you visit that URL  you will see something that looks like: 
</p>
<p>
<img src="http://www.neilsmithline.com/assets/screen-snapshots/feedburner.png"  alt="http://www.neilsmithline.com/assets/screen-snapshots/feedburner.png" />
</p>
<p>
Amongst the multitude of options that FeedBurner provides is the ability to subscribe to a site by email. So I subscribed myself, using a unique email alias, to FeedBurner emails about updates to my site. I then created an email filter that automatically forwards the FeedBurner emails to my tweeting email address and <i>voila</i>, whenever I post a new article I automatically produce a tweet <a href="https://twitter.com/neil_smithline/status/227220890109218816">like this one</a>.
</p>
</div>

</div>

<div id="outline-container-4-3" class="outline-3">
<h3 id="sec-4-3">Tracking "The Buzz"</h3>
<div class="outline-text-3" id="text-4-3">

<p>"The Buzz", also known as "Trending" or simply "current events", is a term to describe what is popular on the internet at any given moment. While tracking all of the internet's news doesn't seem appropriate for a blog, tracking news related to your blog posting may be desirable.
</p>
<p>
Courtesy of <a href="http://socialmention.com">SocialMention</a>, many of my blog postings have current news in the sidebar (see <a href="http://www.neilsmithline.com/blog/2012/07/15/bookifying-news/">example blog posting</a>). In many ways this is similar to tracking a Twitter #hashtag. But SocialMention gathers data from many dozens of web sites providing a richer and more diverse collection of data than Twitter can. 
</p>
<p>
For example, by tracking several popular bookmarking sites such as <a href="http://delicious.com">Delicious</a>, SocialMention can tell you what pages people are bookmarking that are related to your blog posting. Most people, thankfully, don't send a tweet whenever they bookmark a site.
</p>
<p>
While it may be redundant to state,
</p><blockquote>

<p>Displaying current events on your blog postings means that they will always have current information.
</p>
</blockquote>


<p>
This means that there's no need to update your blog posting with links to relevant websites as new information becomes available. That is clearly a task that would become unmanageable as your blog grows. Instead, your <i>static blog</i> will always have <i>dynamic data</i> on it.
</p>
</div>
</div>

</div>




<div id="outline-container-5" class="outline-2">
<h2 id="sec-5">The Age Of Cloud Computing</h2>
<div class="outline-text-2" id="text-5">

<p>While my blog is far from a large operation, the advent of <a href="http://en.wikipedia.org/wiki/Cloud_computing">cloud computing</a> has made these dynamic features possible. From tiny systems like my blog to large systems like Google's search engine, cloud computing is about wiring together the most appropriate services in a manner that produces your desired functionality with a minimal amount of setup, cost, and maintenance.
</p>
<p>
While I don't have exact dates, my automated tweeting on new blog posts has been working maintenance free long enough that I forgot that I had implemented it until I noticed that I had just tweeted about my previous blog posting. I believe that is the very definition of "minimal maintenance".
</p>
<p>
Given the large and growing number of web services in the cloud and my limited time to explore them, I'm sure that this is but a small sampling of the different ways to use dynamic data in static blogs.
</p></div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SparkleShare Doesn't Sparkle]]></title>
    <link href="http://www.neilsmithline.com/blog/2012/05/09/sparkleshare-bomb/"/>
    <updated>2012-05-09T23:12:00-04:00</updated>
    <id>http://www.neilsmithline.com/blog/2012/05/09/sparkleshare-bomb</id>
    <content type="html"><![CDATA[<p>
Based on a LifeHacker posting, I previously blogged about giving SparkleShare a try.. It was cool. A free Dropbox with private hosting. So I installed, configured, and started using SparkleShare. While I was quite excited when I embarked upon my journey using SparkleShare, things didn't work out as well as I had hoped.
</p>


<p>
I quickly found out that SparkleShare doesn't handle symbolic links. Not at all. There's no workaround. The problem is that SparkleShare relies on Git for synchronization and Git doesn't support symbolic links. At least for me, this rendered SparkleShare useless. 
</p>


<p>
When I moved to Dropbox directory, what I had been using for synchronization before SparkleShare, had no files in it, just a bunch of symbolic links. But with SparkleShare, you have to move all your directories into your SparkleShare directory and then scatter symbolic links around your system where the you want the directories to be. This caused a variety of minor but really annoying problems.
</p>


<p>
But SparkleShare totally fails if you want to synchronize a directory that has symbolic links in it. SparkleShare's forum was covered with complaints about the symbolic link problem.
</p>


<p>
I am currently using the following scheme for file distribution/backups:
</p>


<ul>
<li>I'm using rsync to keep my media, bin directory, dot-files, and the like in sync on all my computers.
</li>
<li>For actual backups, I've been using Crashplan for years and couldn't be happier.
</li>
<li>And, in the past week or two, I've put Dropbox synchronization back into the mix to manage synchronization between Org Mode files on my computers and MobileOrg files on my Android. Despite the strong cult following that Dropbox has, synching with my mobile seems to be the only effective use I can find for it. 
</li>
</ul>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cloud Computing: How Expensive Is A Rainy Day?]]></title>
    <link href="http://www.neilsmithline.com/blog/2012/02/29/azure-sunny-day/"/>
    <updated>2012-02-29T11:42:35-05:00</updated>
    <id>http://www.neilsmithline.com/blog/2012/02/29/azure-sunny-day</id>
    <content type="html"><![CDATA[<p>
According to <a href="http://bit.ly/zc1OOr">The Register</a> (via <a href="http://bit.ly/wzufGC">Slashdot</a>), Microsoft's cloud computing platform, Azure, has been down, and I mean <a href="http://dictionary.reference.com/browse/kaput">kaput</a>, for 8+ hours. Worse yet, Azure's status page that tells its customers about outages and expected repair times, to which I won't provide a link, has now been <a href="http://en.wikipedia.org/wiki/Slashdotted">Slashdotted</a> and is down.
</p>


<p>
Less than a year ago, <a href="http://bit.ly/Ay7loE">AWS</a> suffered a significant, though less serious, <a href="http://bit.ly/yNzqJy">outage</a>.
</p>


<p>
While highly-distributed, cloud-based computing is clearly the future of IT, how can an organization understand the costs and prepare for the unavoidable outages? With the relative newness of 3^rd party cloud services, what statistics are useful.
<!-- more -->

For example, let's consider a fictitious service cloud service Neil's Cloud Computing or NCC. NCC is a more established cloud computing service. Its detailed records shows that it has been open for 1,701 days (approximately 4.7 years). In that time it has steadily grown to here it now runs tens of millions of instances of virtual computers, services tens of billions requests each day, and has never had a serious outage. 
</p>


<p>
To be generous, let's define a <i>serious outage</i> as any outage that renders key parts of the site unusable to a significant portion of the site's users and lasts a minimum of five minutes. We'll consider any outage less than that a <i>tolerable outage</i>. 
</p>


<p>
Even with all of this information, how can you calculate the cost of moving your enterprise to a cloud computing platform in general or NCC's in specific (let's assume that NCC is the best service you can find - after all, it is named after me). Even if your is willing to ignore all costs associated with the generously named <i>tolerable outages</i>, how can you know NCC's 1,701 days of uptime mean that it will have another 4.7 years of uptime? How can you know it will be up tomorrow?
</p>


<p>
The answer is simple: You can't! Just as it says on the bottom of financial documents, past performance is no guarantee of future results.
</p>


<p>
But, when it comes to managing an enterprise, "can't" means things like "can't go faster than the speed of light". Everything else is just "How much?". How much does our current IT solution cost? How much would a cloud computing solution cost? How much do our current outages cost us? What are the odds of having a <i>serious outage</i> if we moved to the cloud and how much would that cost us? Etc&hellip;
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sparkleshare: Maybe An Open, Privately Hosted, Dropbox Alternative]]></title>
    <link href="http://www.neilsmithline.com/blog/2011/12/15/sparkleshare/"/>
    <updated>2011-12-15T10:04:43-05:00</updated>
    <id>http://www.neilsmithline.com/blog/2011/12/15/sparkleshare</id>
    <content type="html"><![CDATA[<p> 
<a href="http://dropbox.com">Dropbox</a> took the internet by storm with its free storage and ease of
access. But Dropbox comes with a limited amount of data, a level of
secureness that is hard-to-understand, and rather proprietary.
</p>


<p>
<a href="http://sparkleshare.org">Sparkleshare</a> is an <a href="http://en.wikipedia.org/wiki/Free_and_Open_Source_Software">open source</a> alternative to Dropbox that hit my
radar screen about 6 months ago. I played with it a bit back then but
it didn't seem to be quite there. I think I was using an early-alpha,
pre-release version so I this was to be expected.
<!-- more -->

I gave it another try earlier this week and seem to be pretty happy
with it. Some of the things I like about it include:
</p>


<ol>
<li>I get to host it on my own server. This means the data is
     private. I own it. Nobody else has a copy of it. Etc.
</li>
<li>I have been renting a Linux <a href="http://en.wikipedia.org/wiki/Virtual_private_server">VPS</a> from <a href="http://rosehosting.com">RoseHosting.com</a> ($20/month)
     for many years so they provide me with a convenient, managed, and
     relatively secure place to host Sparkleshare.
</li>
<li>It only took me about 5 minutes to install and configure
     sparkleshare on my Linux VPS. Not because I'm brilliant but
     because Linux doesn't suck and Sparkleshare requires no special
     server software. Just a few standard packages such as <a href="http://en.wikipedia.org/wiki/Git_(software)">Git</a> and a
     copy-and-paste of one command line. The client install (Mac OS X)
     was equally simple.
</li>
<li>Being that it is <a href="http://en.wikipedia.org/wiki/Free_and_Open_Source_Software">FOSS</a>, there is continual scrutiny of the source
     code to maintain quality and security.
</li>
</ol>




<p>
The only real objection I have with it is that Dropbox allows <a href="http://en.wikipedia.org/wiki/Symbolic_link">symbolic links</a> in the Dropbox folder so I don't need to have all of my files in
one directory. I haven't yet gotten this to work on Sparkleshare.
Either I just haven't figured it out, someone else will add it
shortly, or, being it is <a href="http://www.wikipedia.com/Foss">FOSS</a>, I'll add it if I get motivated enough
(BTW: I'm voting for someone else implementing it).
</p>

]]></content>
  </entry>
  
</feed>
