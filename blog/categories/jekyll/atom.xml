<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jekyll | My Geekdom]]></title>
  <link href="http://www.neilsmithline.com/blog/categories/jekyll/atom.xml" rel="self"/>
  <link href="http://www.neilsmithline.com/"/>
  <updated>2012-07-24T19:50:48-04:00</updated>
  <id>http://www.neilsmithline.com/</id>
  <author>
    <name><![CDATA[Neil Smithline]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Blurring Static And Dynamic Blogs]]></title>
    <link href="http://www.neilsmithline.com/blog/2012/07/22/blurring-static-and-dynamic-blogs/"/>
    <updated>2012-07-22T18:23:00-04:00</updated>
    <id>http://www.neilsmithline.com/blog/2012/07/22/blurring-static-and-dynamic-blogs</id>
    <content type="html"><![CDATA[<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">Static Blogging</h2>
<div class="outline-text-2" id="text-1">

<p>I've discussed the pros and cons about static blogging <a href="http://www.neilsmithline.com/blog/categories/blogging-tech/">many times</a> before. In summary, the cons are that, well that your blog is static. No surprise there.
</p>
<p>
Fortunately, there are ways to push the limits of static blogging so that it is not quite so static.
</p>
</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2">Website Hosting</h2>
<div class="outline-text-2" id="text-2">

<p>Unless you are self-hosting your <a href="http://octopress.org">Octopress</a> or <a href="http://jekyllrb.com">Jekyll</a> blog, you are using another site to host your blog. I host mine on Github. They have a web server running 24x7 to host it. But that's not my problem. I just use their (free) services.
</p>
<p>
I understand that website hosting isn't a terribly exciting example of stretching the bubble of static blogging, but it is an example nonetheless. Dynamic blogs require specialized software running on their hosting computer to work. Static blogs tend to be able to run on generic web servers but there still must be a web server or there's no blog.
</p>
</div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3">JavaScript Helps</h2>
<div class="outline-text-2" id="text-3">

<p>Out of the box, Octopress comes with some features to show your most recent tweets as well as recent activity within your <a href="http://github.com">Github</a> repositories. This is dynamic data that Octopress implements with some JavaScript.
</p>
<p>
Just to be clear, by <i>dynamic data</i> I mean that the data displayed on the page may change without a republication of the blog. I am not necessarily referring to a scrolling widget or something. Just dynamic data. 
</p>
<p>
Conversely, JavaScript can be used to dynamically display static data. That is, data that is embedded in the source of the web page. Being that the data is embedded in the page's source at or before publication time, it is assuredly <i>static data</i>.
</p>
<p>
But client-side JavaScript (ie: JavaScript running in the user's browser) has its limits. For example, if you want to send a tweet whenever you add a new blog entry, client-side JavaScript is going to have a hard time at it.
</p>


<!-- more -->

</div>

</div>




<div id="outline-container-4" class="outline-2">
<h2 id="sec-4">Pushing Beyond Web Hosting JavaScript</h2>
<div class="outline-text-2" id="text-4">

<p>The trick behind adding a much wider array of dynamic features to your <i>static</i> blog is:
</p><blockquote>

<p>Integrate with external web services and let them do the work for you.
</p>
</blockquote>


<p>
It is even better if you can let other sites do the hard work for you free of charge. For example, Github is hosting this blog at no cost to me. Thank you Github! But Github won't tweet about my new blog postings or search through my website. Fortunately, there are services that will happily do that for you.
</p>

</div>

<div id="outline-container-4-1" class="outline-3">
<h3 id="sec-4-1">Site Search</h3>
<div class="outline-text-3" id="text-4-1">

<p>This blog's search functionality is provided by Google. Dynamic blogging systems such as <a href="http://joomla.org">Joomla</a> have a large array of <a href="http://extensions.joomla.org/extensions/search-a-indexing">search extensions</a> that you can run on your server to provide various searching features. I'm sure that they provide a much larger set of functionality than my site's Google search provides. 
</p>
<p>
Richer functionality or not, each extension needs to be installed, configured, and maintained. With Octopress, you never need to think about your site's search functionality. The site comes preconfigured for Google site search. That works for me.
</p>
</div>

</div>

<div id="outline-container-4-2" class="outline-3">
<h3 id="sec-4-2">Automated Tweeting</h3>
<div class="outline-text-3" id="text-4-2">

<p>There are many ways to tweet via an email message but there is no way, at least none that I've bothered to think through, to get Github to send emails formatted for a tweet whenever you post. But, there are many sites that will watch your blog for change and perform some activity when your blog changes.
</p>
<p>
Exactly which site you use depends on what your needs are. For automated tweeting I decided to use <a href="http://feedburner.com/">FeedBurner</a>. If you're unfamiliar with FeedBurner, it provides a web service that takes your site's RSS/Atom feed as input and adds value to that feed. My site's RSS feed is <a href="http://feeds.feedburner.com/MyGeekdom">http://feeds.feedburner.com/MyGeekdom</a>. Assuming you don't have uncommon browser settings, if you visit that URL  you will see something that looks like: 
</p>
<p>
<img src="http://www.neilsmithline.com/assets/screen-snapshots/feedburner.png"  alt="http://www.neilsmithline.com/assets/screen-snapshots/feedburner.png" />
</p>
<p>
Amongst the multitude of options that FeedBurner provides is the ability to subscribe to a site by email. So I subscribed myself, using a unique email alias, to FeedBurner emails about updates to my site. I then created an email filter that automatically forwards the FeedBurner emails to my tweeting email address and <i>voila</i>, whenever I post a new article I automatically produce a tweet <a href="https://twitter.com/neil_smithline/status/227220890109218816">like this one</a>.
</p>
</div>

</div>

<div id="outline-container-4-3" class="outline-3">
<h3 id="sec-4-3">Tracking "The Buzz"</h3>
<div class="outline-text-3" id="text-4-3">

<p>"The Buzz", also known as "Trending" or simply "current events", is a term to describe what is popular on the internet at any given moment. While tracking all of the internet's news doesn't seem appropriate for a blog, tracking news related to your blog posting may be desirable.
</p>
<p>
Courtesy of <a href="http://socialmention.com">SocialMention</a>, many of my blog postings have current news in the sidebar (see <a href="http://www.neilsmithline.com/blog/2012/07/15/bookifying-news/">example blog posting</a>). In many ways this is similar to tracking a Twitter #hashtag. But SocialMention gathers data from many dozens of web sites providing a richer and more diverse collection of data than Twitter can. 
</p>
<p>
For example, by tracking several popular bookmarking sites such as <a href="http://delicious.com">Delicious</a>, SocialMention can tell you what pages people are bookmarking that are related to your blog posting. Most people, thankfully, don't send a tweet whenever they bookmark a site.
</p>
<p>
While it may be redundant to state,
</p><blockquote>

<p>Displaying current events on your blog postings means that they will always have current information.
</p>
</blockquote>


<p>
This means that there's no need to update your blog posting with links to relevant websites as new information becomes available. That is clearly a task that would become unmanageable as your blog grows. Instead, your <i>static blog</i> will always have <i>dynamic data</i> on it.
</p>
</div>
</div>

</div>




<div id="outline-container-5" class="outline-2">
<h2 id="sec-5">The Age Of Cloud Computing</h2>
<div class="outline-text-2" id="text-5">

<p>While my blog is far from a large operation, the advent of <a href="http://en.wikipedia.org/wiki/Cloud_computing">cloud computing</a> has made these dynamic features possible. From tiny systems like my blog to large systems like Google's search engine, cloud computing is about wiring together the most appropriate services in a manner that produces your desired functionality with a minimal amount of setup, cost, and maintenance.
</p>
<p>
While I don't have exact dates, my automated tweeting on new blog posts has been working maintenance free long enough that I forgot that I had implemented it until I noticed that I had just tweeted about my previous blog posting. I believe that is the very definition of "minimal maintenance".
</p>
<p>
Given the large and growing number of web services in the cloud and my limited time to explore them, I'm sure that this is but a small sampling of the different ways to use dynamic data in static blogs.
</p></div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Is Pretty Great]]></title>
    <link href="http://www.neilsmithline.com/blog/2012/05/26/octopress-is-pretty-great/"/>
    <updated>2012-05-26T13:32:00-04:00</updated>
    <id>http://www.neilsmithline.com/blog/2012/05/26/octopress-is-pretty-great</id>
    <content type="html"><![CDATA[<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">Jekyll Overview</h2>
<div class="outline-text-2" id="text-1">

<p>I have simply fallen in love with <a href="http://bit.ly/KT1aFT">Octopress</a>. I think I mentioned previously that Octopress is an auto-configuration tool wrapped around <a href="http://bit.ly/Jm1bmc">Jekyll</a>. And Jekyll is the technology behind <a href="http://bit.ly/Krch8n">Github pages</a>. As such, if you use Jekyll for your blogging platform, you can preview your blog locally, push it to Github, and let Github do all the page serving. 
</p>
<p>
This isn't actually as much work for the Github servers as you may think. Jekyll is a <a href="http://bit.ly/KrdOeu">static</a> <a href="http://bit.ly/KrdUmf">blogging system</a> with no <a href="http://bit.ly/KrdX1s">CMS support</a>. A static blog needs to be <a href="http://bit.ly/Kre8tB">compiled</a> whenever content is modified, but once compiled, the only thing the server needs to do is serve the pages. Dynamic blogging systems such as <a href="http://bit.ly/KreoZJ">Wordpress</a> and <a href="http://bit.ly/KreuAH">Joomla</a> are programs that run on the server and work interactively with the web server to produce each page.
</p>
</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2">Configuration</h2>
<div class="outline-text-2" id="text-2">

<p>Octopress's biggest addition to Jekyll is that it automagically configures Jekyll for you. I have found that configuring Jekyll is a bit of a pain. Jekyll decided to trade easy configuration for flexibility. This is a common decision in applications and one I can't really argue with.
<!-- more -->

But Octopress packages a mostly configured Jekyll installation in a neat little package. The introductory paragraph on <a href="http://bit.ly/KT1aFT">Octopress.org</a> states:
</p><blockquote>

<p>Octopress is a framework designed by Brandon Mathis for Jekyll, the blog aware static site generator powering Github Pages. To start blogging with Jekyll, you have to write your own HTML templates, CSS, Javascripts and set up your configuration. But with Octopress All of that is already taken care of. Simply clone or fork Octopress, install dependencies and the theme, and you're set.
</p>
</blockquote>


<p>
While that may sound a bit intimidating to the less-computer literate, the Octopress site carefully steps you through the process. I've installed and used Wordpress, Joomla, <a href="http://bit.ly/KrgcC1">Drupal</a>, <a href="http://bit.ly/wq2Ien">Nanoblogger</a>, and many other blogging systems. I can say that Octopress is, by far, the easiest. 
</p>
<p>
The above quote states three steps for installing Octopress but there are actually a few more steps:
</p><ol>
<li>Install Git
</li>
<li>Clone or fork Octopress
</li>
<li>Install dependencies
</li>
<li>Install theme
</li>
<li>Configure your blog
</li>
<li>Configure deployment
</li>
</ol>



</div>

<div id="outline-container-2-1" class="outline-3">
<h3 id="sec-2-1">Git</h3>
<div class="outline-text-3" id="text-2-1">

<p>If you don't have <a href="http://bit.ly/KrgU2a">Git</a> installed, you need to install it. This was a trivial task for most users but, thanks to the clever folk at Github, has become idiot-proof. Github created a <a href="http://bit.ly/KrhqgF">Mac OS X</a> and <a href="http://windows.github.com/">Windows</a> application that allows easy use of Github. These make installing and using Git user-friendly for those who prefer to avoid <a href="http://bit.ly/xOIkfJ">CLI</a>s.
</p>
</div>

</div>

<div id="outline-container-2-2" class="outline-3">
<h3 id="sec-2-2">Clone Or Fork Octopress</h3>
<div class="outline-text-3" id="text-2-2">

<p>Cloning Octopress, simpler than forking it, is a single command line 
</p><pre class="example">
git clone git://github.com/imathis/octopress.git octopress
</pre>

<p>It takes only a few mouse clicks if you are using one of Github's applications to do the clone. 
</p>
</div>

</div>

<div id="outline-container-2-3" class="outline-3">
<h3 id="sec-2-3">Install Dependencies</h3>
<div class="outline-text-3" id="text-2-3">

<p>Installing the dependencies is, yet again, a few simple CLI commands described in an easy-to-read style on Octopress's <a href="http://bit.ly/LExpsY">setup</a> page.
</p>
</div>

</div>

<div id="outline-container-2-4" class="outline-3">
<h3 id="sec-2-4">Install The Theme</h3>
<div class="outline-text-3" id="text-2-4">

<p>Installing the theme is a single CLI command:
</p><pre class="example">
rake install
</pre>

<p>There are additional theme installation options but you can simply ignore them as the defaults work well. In a subsequent blog post I'll discuss how I have made a minor alteration to the Octopress installation that allows me to entirely change my theme as often as I like without losing any data. Simple theme changes (eg: page colors) are easy to make at anytime. 
</p>
</div>

</div>

<div id="outline-container-2-5" class="outline-3">
<h3 id="sec-2-5">Configure Your Blog</h3>
<div class="outline-text-3" id="text-2-5">

<p>Configuring your blog is perhaps the most complicated step in the entire installation process. You'll need to open a text editor such as <a href="http://bit.ly/LEyD7l">Textedit</a> on a Mac or <a href="http://bit.ly/LEyRvo">Notepad</a> on Windows. 
</p>
<p>
The configuration file is written in a format called <a href="http://bit.ly/LEzjd3">YAML</a>. That sounds a lot scarier than it actually is. Octopress's <a href="http://bit.ly/Mlynfm">configuration page</a> states that you just need to edit the existing <code>_config.yml</code>, and modify the following lines:
</p><pre class="example">
url:                # For rewriting urls for RSS, etc
title:              # Used in the header and title tags
subtitle:           # A description used in the header
author:             # Your name, for RSS, Copyright, Metadata
simple_search:      # Search engine for simple site search
description:        # A default meta description for your site
subscribe_rss:      # Url for your blog's feed, defauts to /atom.xml
subscribe_email:    # Url to subscribe by email (service required)
email:              # Email address for the RSS feed if you want it.
</pre>


<p>
Several of the configuration options have default values or can be left empty.
</p>
<p>
This configuration step in Octopress differs from other blogging systems only in that you have to use Textedit or Notepad to enter the data. Many other systems allow you to enter the data into a <a href="http://bit.ly/n1i2v2">GUI</a> or a web page. 
</p>
</div>

</div>

<div id="outline-container-2-6" class="outline-3">
<h3 id="sec-2-6">Configuring Deployment</h3>
<div class="outline-text-3" id="text-2-6">

<p>Configuring your deployment, the final setup action, involves telling Octopress what computer is going to <a href="http://bit.ly/LECz8n">host</a> your blog. While you can run your blog right on your desktop or laptop, it will only be visible by other people in your home or office. This is helpful if you want to preview your blog before "publishing" it so the rest of the world can see it but when you want to publish your blog you will need to have access to a hosting computer (AKA: a server) that is on the internet <a href="http://bit.ly/LEIgTI">24x7</a>.
</p>
<p>
Getting access to a server can be less than straightforward and almost always costs money. But this is rather simple with Octopress because:
</p><ul>
<li>Octopress is a static blog. This is compared to a dynamic blog that requires programs to interact with the server. Once Octopress has done its job, you just need to put the blog into the right location on your server and everything will magically work.
</li>
<li>Octopress, the blogging system that tries to make configuration easy, has carefully documented, in easy-to-read text, three different ways to <a href="http://bit.ly/LEGcuN">host your blog</a> on a server. Two of them are absolutely free: Github itself (the one I use) and <a href="http://bit.ly/LEGIsK">Heroku</a>. The third strategy using <a href="http://bit.ly/LEIdHt">rsync</a> is a bit more complex and typically costs some money to use. That being said, the documentation guides you to a hosting company that charges only $5 a month for server access. Unless you <b>know</b> that you need a server for something besides hosting a blog, I strongly recommend going with one of the other options. 
</li>
</ul>


<p>
As I said, I am using Github to host my blog. It takes exactly one line to configure your blog to use Github. I haven't used the other deployment mechanisms but Heroku seems to be of equal complexity while rsync definitely requires more work and a greater knowledge of computers.
</p>
</div>

</div>

<div id="outline-container-2-7" class="outline-3">
<h3 id="sec-2-7">Configuration Summary</h3>
<div class="outline-text-3" id="text-2-7">

<p>While there is a lot of descriptive text above, the entire configuration process took me a couple of hours the first time and about 20 minutes the second time. Unless you are like me and enjoy trying stupid things, you'll only need to install it once :-) I would imagine that a non-technical users could easily install Octopress in half a day.
</p>
<p>
The only exception that I can think of would be if you're on a Windows computer and have lots of difficulties installing the dependencies. Mac OSX and Linux come with most of the dependencies pre-installed. I don't think that Windows does.
</p>
</div>
</div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3">It's Blogging Time!</h2>
<div class="outline-text-2" id="text-3">

<p>Before you can actually start to blog, you need to choose an editor and a markup language. While you can change these at anytime, you need one of each to blog. I'll discuss this in a subsequent blog posting where I discuss my personal Octopress configuration.
</p>
<p>
Now that everything is configured, it's time to blog. While this involves using the command line, it is a trivial usage. When you want to create a new post you execute the command:
</p><pre class="example">
rake 'new_post[Name Of My Post]'
</pre>

<p>The reason why that is the magical incantation to create a new post is unimportant. All you need to do is remember (or be able to lookup) that command.
</p>
<p>
When the <code>rake</code> command finishes, it will tell you the name of the file for your new posting. Just open the file and start typing. If you want to see a preview of your blog before publishing it to the server, run the command
</p><pre class="example">
rake preview
</pre>


<p>
Then you can open your web browser to <a href="http://localhost:4000">http://localhost:4000</a> to see your blog. I strongly recommend that you copy-and-paste that URL and then bookmark it. 
</p>
<p>
Once you are ready to publish your blog to the world, execute the command
</p><pre class="example">
rake gen_deploy
</pre>

<p>And <i>voila</i>! You have updated your blog.
</p>
</div>

</div>




<div id="outline-container-4" class="outline-2">
<h2 id="sec-4">Octopress Summary</h2>
<div class="outline-text-2" id="text-4">


</div>

<div id="outline-container-4-1" class="outline-3">
<h3 id="sec-4-1">Cons</h3>
<div class="outline-text-3" id="text-4-1">


</div>

<div id="outline-container-4-1-1" class="outline-4">
<h4 id="sec-4-1-1">Configuration</h4>
<div class="outline-text-4" id="text-4-1-1">

<p>Configuring Octopress is definitely more complex than configuring a blog on Blogger.com or a similar service. If you are looking for the easiest solution, no-frills solution, go with one of those.
</p>
</div>

</div>

<div id="outline-container-4-1-2" class="outline-4">
<h4 id="sec-4-1-2">Single Computer Publishing</h4>
<div class="outline-text-4" id="text-4-1-2">

<p>While I haven't seen it explicitly stated in any documentation for Octopress or Jekyll, they really are intended to publish new posts from a single computer. You can author the posts on any computer or network service. The first option that jumps into my head is <a href="http://bit.ly/KTgaWb">Google Docs</a>. But to publish (ie: to deploy) your site from more than one computer will definitely require extra configuration, computer skills, and tinkering. If you absolutely must <i>publish</i> from multiple computers, the online blogging systems may be a better choice.
</p>
</div>
</div>

</div>

<div id="outline-container-4-2" class="outline-3">
<h3 id="sec-4-2">Pros</h3>
<div class="outline-text-3" id="text-4-2">


</div>

<div id="outline-container-4-2-1" class="outline-4">
<h4 id="sec-4-2-1">Configuration</h4>
<div class="outline-text-4" id="text-4-2-1">

<p>While configuring a blog on a site like Blogger is definitely easier than configuring Octopress, if Blogger doesn't meet your needs, I think Octopress is easier to manage than all Joomla, Drupal, and all of its competitors &ndash; at least the ones I've seen.
</p>
</div>

</div>

<div id="outline-container-4-2-2" class="outline-4">
<h4 id="sec-4-2-2">Content Possession</h4>
<div class="outline-text-4" id="text-4-2-2">

<p>When you use a site like Blogger.com, the content you have posted is in the possession of Blogger. They determine how they will store your content, how they will let you export it, modify it, delete it, etc&hellip; But with Octopress, you are always in possession of your content. In order to have your blog visible on the web, you must deploy it to a server, but that is just a copy of your content. You are always in possession of the original content.
</p>
</div>

</div>

<div id="outline-container-4-2-3" class="outline-4">
<h4 id="sec-4-2-3">Content Accessibility</h4>
<div class="outline-text-4" id="text-4-2-3">

<p>Whether you are using an online blogging service such as Blogger.com or hosting your own blogging application such as Joomla or Drupal, your postings are typically not stored in a convenient manner. Even if the blogging system lets you get access to all of your content, the content is frequently meaningless or difficult to use.
</p>
<p>
But with Octopress, the content for each posting is in a file. One file for each posting. While I've not discussed choosing an editor or a markup language in this posting, it is your choice of editor and markup language that determine what you can do with your content.
</p>
<p>
For example, I was blogging with Nanoblogger for a few months. As it required continual tinkering, I moved to Octopress. Like Octopress, Nanoblogger lets you choose your editor and markup language. Because both blogging systems give you accessibility to your content, I was able to convert about 20 Nanoblogger postings into Octopress postings in about 20 minutes. I imagine it would have taken less computer-savvy users as long as 2-3 minutes a posting. 
</p>
<p>
The one-file-one-posting principal of Octopress, and Nanoblogger, make life so much simpler.
</p>
</div>

</div>

<div id="outline-container-4-2-4" class="outline-4">
<h4 id="sec-4-2-4">And It Looks Good Too!</h4>
<div class="outline-text-4" id="text-4-2-4">

<p>Even after customizing them, I find that Wordpress blogs tend to be drap and all look like <a href="http://bit.ly/KThoAU">this</a> and that Blogger.com blogs require lots of tinkering but still tend to look like <a href="http://bit.ly/KThtVf">this</a>. On the other hand, Octopress blogs tend to look like the <a href="http://bit.ly/KT1aFT">Octopress homepage</a> or my <a href="http://bit.ly/yGGszW">blog</a>.
</p>
<p>
IMO, Octopress looks great out of the box. I am partial to using dark themes where black, white, and shades of gray are the main colors. It took me about 10 minutes to change the default <a href="http://bit.ly/KT1aFT">colors for Octopress</a> to use my preferred <a href="http://bit.ly/yGGszW">color pallette</a>.
</p>
</div>

</div>

<div id="outline-container-4-2-5" class="outline-4">
<h4 id="sec-4-2-5">It Will Grow With You</h4>
<div class="outline-text-4" id="text-4-2-5">

<p>I think that Octopress's greatest features are the above mentioned ease-of-configuration and the fact that, while it is hidden from you, it is built on a very strong blogging engine, Jekyll. So, if you wake up one day and say "Gee. I wish my blog could do XYZ.", the odds are that it can. Just google "Jekyll blogs XYZ" and, at least for reasonable XYZs, you'll find that instructions about reconfiguring your blog so it can do XYZ.
</p>
<p>
There are also many discussion groups, forums, and helpful Jekyll users in the blogosphere that can offer suggestions, provide pointers, or even make a small modification to Octopress/Jekyll so that XYZ is easy to do.
</p>
</div>
</div>
</div>

</div>




<div id="outline-container-5" class="outline-2">
<h2 id="sec-5">Future Postings About Octopress</h2>
<div class="outline-text-2" id="text-5">

<p>This is now my second posting about Octopress. My } discussed my initial opinions about Octopress. They were largely positive but so too were my } of Nanoblogger. 
</p>
<p>
At the time of writing this blog posting I'm certain that I'm going to love Octopress. (Though, if I change my mind, I am in possession of my own content so it is easy to switch to another platform.)
</p>
<p>
My next posting about Octopress will explain the minor modifications I have made to Octopress. I made these modifications to accomplish two goals:
</p><ol>
<li>Allow me to easily use <a href="http://bit.ly/zhYdcB">Org Mode</a> as my markup language and <a href="http://emacswiki.org">Emacs</a> as my editor. While I simply love this setup, I imagine that it will only be of interest to preexisting Emacs users.
</li>
<li>Keep my content totally separate from the Octopress's content. By this I mean that if, you were to burn my computer as I'm typing these very words, I could have Octopress up and running on a new computer with all of my content, including postings, images, etc.., in about 20 minutes. IMO, this an improvement on Octopress's configuration and should probably be changed in Octopress.
</li>
</ol>

</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[YANBT: Yet Another New Blogging Technology]]></title>
    <link href="http://www.neilsmithline.com/blog/2012/05/14/new-blog-tech/"/>
    <updated>2012-05-14T12:36:00-04:00</updated>
    <id>http://www.neilsmithline.com/blog/2012/05/14/new-blog-tech</id>
    <content type="html"><![CDATA[<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">NanoBlogger Was Killing Me</h2>
<div class="outline-text-2" id="text-1">

<p><a href="http://bit.ly/wq2Ien">NanoBlogger</a> really looked cool to me 
(<a href="/blog/categories/blogging-tech">my postings about why I liked it</a>):
</p><ul>
<li>Small
</li>
<li>Most functionality provided via plugins
</li>
<li><a href="http://bit.ly/xOIkfJ">CLI</a> only
</li>
<li>It is <a href="http://bit.ly/Mlkg9X">FOSS</a>.
</li>
<li>Produced a static site (ie: only serves static pages)
</li>
<li>It was built on <a href="http://bit.ly/JbQmzE">Bash</a> &ndash; I thought this was the coolest
</li>
</ul>


<p>
I liked it so much that I wrote a CLI for it that was better suited to my personal workflow. I also spent some time integrating it with Emacs. But it had endless problems.
</p>
<p>
It was slow, it did not do anything automatically, frequently required rebuilding of the entire blog, was hard to view on my local machine, isn't really being maintained, doesn't have a real templating system, breaks the RSS feed on special characters such as etc&hellip;
</p>
</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2">Where Next</h2>
<div class="outline-text-2" id="text-2">

<p>Over the past few weeks I've been looking around for a new blogging system. The only real contender seemed to be <a href="http://bit.ly/Jm1bmc">Jekyll</a>. It is written in <a href="http://bit.ly/KAfYv0">Ruby</a> and used by Github to power Github Pages. It has so many contributors to it that its <a href="http://bit.ly/JetyoE">Github repository</a> has, at the moment, 50+ pull requests.
</p>
<p>
I had nearly chosen Jekyll when I moved to NanoBlogger. I found that the discussion about moving to Jekyll on the <a href="http://bit.ly/JH7cIy">0xdecafbad.com</a> blog really aligned with my thoughts.
</p>
<p>
But, after playing with it a bit, I found that Jekyll was difficult to configure. And I just so liked the Bash thing that NanoBlogger had that I decided to go with NanoBlogger. But now I'm wasting too much of my time fighting with Nanoblogger and I should reconsider Jekyll.
<!-- more -->

This time, when I was researching Jekyll, I found <a href="http://bit.ly/KT1aFT">Octopress</a>. Octopress is Jekyll on steroids. It provides an automated configuration and maintenance system that takes the pain out of using Jekyll.
</p>
<p>
So now I'm giving Octopress/Jekyll a try. I'll see how it goes. Configuring a site with a <i>hello world</i> blog entry only took a couple of hours. Most of that was just downloading Octopress and reading the docs to figure out what to do. It turned out that configuration was running three <a href="http://bit.ly/KT2jxn">rake</a> commands. 
</p>
</div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3">Converting From Nanoblogger To Jekyll</h2>
<div class="outline-text-2" id="text-3">

<p>Because NanoBlogger blog entries are plain text with markup, converting my entire old blog to Octopress was fairly easy as Octopress also uses plain text with markup for blog entries. I ran into two snags. The first one was in Emacs' <a href="http://bit.ly/zhYdcB">Org Mode</a>, my authoring tool. It broke when you had a "+" in the path name of your input files (in my case, in the path of my blog). It took me several hours to find the bug. Once I found it, it was easy to patch and I sent my fix to be included in subsequent Org Mode releases.
</p>
<p>
The second problem was a bit trickier. Octopress was breaking on some of my blog's generated HTML files. The error message gave me the line number and the character number in that line that was causing the error but it omitted to give me the file name. I believe the technical term for that is "Oops!".
</p>
<p>
To find the file that was casing the problem I started to remove blog files using a <a href="http://bit.ly/KT3gpo">binary search</a>-ish style to track the problem file down. This proved more difficult than I thought it should. After much frustration, it occurred to me that the problem was in many blog entries so the binary search wasn't so helpful. So I wiped my blog and started adding one posting at a time. 
</p>
<p>
Even after I found the first posting that caused Octopress, actually Jekyll, to crash, I couldn't figure out what was wrong with the file. The error message said something about non-ASCII characters but I only had ASCII, or so I thought. It turned out that I had copied and pasted some text from my browser and it had inserted a hyphen (-) that was not the ASCII hyphen. To me, they looked identical. 
</p>
<p>
Despite knowing what the problem was, I couldn't automate Emacs or grep to find the offensive hyphens. In Emacs, the search treated ASCII and non-ASCII hyphens the same. I forget the problems I had with grep but I couldn't get it to work either. This meant I was going to have to add one entry at a time to my blog to track down the other problems. Thank you &ndash; NOT!
</p>
<p>
But Jekyll is written in Ruby and Ruby is a scripting language so I have the source code for Jekyll. Being that the error message included a full stack trace, I figured I could update the error message. In the end I just ended up making Jekyll a bit more verbose: it announces which file it is about to process with the message:
:Processing file <i>myfile</i>.
</p>
<p>
Then I added all my blog entries, ran Jekyll, got the same error message with only the line and character position, but now had the name of the file it was processing when it had a problem.
</p>
</div>

</div>




<div id="outline-container-4" class="outline-2">
<h2 id="sec-4">Plain Text Blogs Rock!</h2>
<div class="outline-text-2" id="text-4">

<p> After correcting a couple of entries I noticed that the problem only occurred on hyphens (-) and single quotes ('). Being that both NanoBlogger and Octopress/Jekyll use plain text files for their input, I had a whole bunch of tools to help me fix the problem. 
</p>
<p>
 In the end I ended up turning Emacs failure to distinguish between the ASCII and non-ASCII versions of these characters to my advantage. I did a search-and-replace on all my blog entries replacing hyphens with hyphens and single quotes with single quotes. While Emacs' search found both ASCII and non-ASCII characters, it always replaced them with what I typed as the replacement, ASCII.
</p>
<p>
Then, <i>voila</i>, there was my blog. And my blog looked way better in Octopress than NanoBlogger. Check out a NanoBlogger <a href="http://bit.ly/wq2Ien">sample blog</a> and an Octopress <a href="http://bit.ly/KT1aFT">sample blog</a>. Huge difference. Also, excluding the weak error message from Jekyll (I'll file a bug report on that and I suspect someone will fixed it as Jekyll is so heavily used), I didn't need to do a thing to build and publish the blog. Octopress even pushes the blog to Github automatically. I had written a script to do this automatically for NanoBlogger, but I'd much rather use someone else's perfectly good solution rather than writing my own.
</p>
<p>
I think I'm going to be very happy with Octopress.
</p>
</div>
</div>

]]></content>
  </entry>
  
</feed>
